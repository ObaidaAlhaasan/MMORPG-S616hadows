{"version":3,"sources":["../src/index.js"],"names":["uri","process","env","MONGO_CONNECTION_URL","mongoConfig","useNewUrlParser","useCreateIndex","MONGO_USER_NAME","MONGO_PASSWORD","auth","authSource","user","pass","mongoose","connect","connection","on","error","console","log","exit","set","app","server","require","Server","io","listen","gameManager","GameManager","setup","port","PORT","use","bodyParser","urlencoded","extended","json","credentials","origin","get","passport","authenticate","session","request","response","status","express","path","join","__dirname","send","routes","passwordRoutes","secureRoutes","message","next"],"mappings":"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","sourcesContent":["import 'dotenv/config';\nimport path from 'path';\nimport express from 'express';\nimport bodyParser from 'body-parser';\nimport cors from 'cors';\nimport cookieParser from 'cookie-parser';\nimport mongoose from 'mongoose';\nimport passport from 'passport';\n\nimport routes from './routes/main';\nimport passwordRoutes from './routes/password';\nimport secureRoutes from './routes/secure';\nimport GameManager from './game_manager/GameManager';\n\n// setup mongo connection\nconst uri = process.env.MONGO_CONNECTION_URL;\nconst mongoConfig = {\n  useNewUrlParser: true,\n  useCreateIndex: true,\n};\nif (process.env.MONGO_USER_NAME && process.env.MONGO_PASSWORD) {\n  mongoConfig.auth = {authSource: 'admin'};\n  mongoConfig.user = process.env.MONGO_USER_NAME;\n  mongoConfig.pass = process.env.MONGO_PASSWORD;\n}\nmongoose.connect(uri, mongoConfig);\n\nmongoose.connection.on('error', (error) => {\n  console.log(error);\n  process.exit(1);\n});\n\nmongoose.set('useFindAndModify', false);\n\nconst app = express();\nconst server = require('http').Server(app);\nconst io = require('socket.io').listen(server);\n\nconst gameManager = new GameManager(io);\ngameManager.setup();\n\nconst port = process.env.PORT || 3000;\n\n// update express settings\napp.use(bodyParser.urlencoded({extended: false})); // parse application/x-www-form-urlendcoded\napp.use(bodyParser.json()); // parse application/json\napp.use(cookieParser());\n// process.env.CORS_ORIGIN\napp.use(cors({credentials: true, origin: '*'}));\n\n// require passport auth\nrequire('./auth/auth');\n\napp.get('/game.html', passport.authenticate('jwt', {session: false}), (request, response) => {\n  response.status(200).json(request.user);\n});\n\napp.use(express.static(path.join(__dirname, '/../public')));\n\napp.get('/', (request, response) => {\n  response.send(path.join(__dirname, '/../index.html'));\n});\n\n// setup routes\napp.use('/', routes);\napp.use('/', passwordRoutes);\napp.use('/', passport.authenticate('jwt', {session: false}), secureRoutes);\n\n// catch all other routes\napp.use((request, response) => {\n  response.status(404).json({message: '404 - Not Found', status: 404});\n});\n\n// handle errors\n// eslint-disable-next-line no-unused-vars\napp.use((error, request, response, next) => {\n  console.log(error);\n  response.status(error.status || 500).json({error: error.message, status: 500});\n});\n\nmongoose.connection.on('connected', () => {\n  console.log('connceted to mongo');\n  server.listen(port, () => {\n    console.log(`server is running on port: ${port}`);\n  });\n});\n"],"file":"index.js"}